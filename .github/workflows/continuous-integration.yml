# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: builds

on:
  push:
    # Run when main is updated
    branches: [ main ]
  pull_request:
    # Run on pull requests against main
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      DISPLAY: ':99.0'
    steps:
    - uses: actions/checkout@main
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends libyaml-dev libegl1-mesa libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-shape0 libxcb-cursor0 xserver-xephyr xvfb
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov pytest-qt pytest-xvfb ipython anyio
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: tlambert03/setup-qt-libs@v1
    - name: Install plantcv-annotate
      # Run coverage analysis on pytest tests
      run: |
        pip install .
        pip uninstall -y opencv-python
        pip install opencv-python-headless
    - name: Tests
      uses: aganders3/headless-gui@v2
      with:
        run: pytest --cov-report=xml --cov=./
    - name: Upload coverage to Deepsource
      uses: deepsourcelabs/test-coverage-action@master
      with:
        key: python
        coverage-file: coverage.xml
        dsn: ${{ secrets.DEEPSOURCE_DSN }}
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
